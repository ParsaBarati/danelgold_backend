{"version":3,"sources":["../../../src/common/utils/logger.interseptor.ts"],"sourcesContent":["import {\r\n  Injectable,\r\n  NestInterceptor,\r\n  ExecutionContext,\r\n  CallHandler,\r\n  Logger,\r\n} from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements NestInterceptor {\r\n  private readonly logger = new Logger(LoggingInterceptor.name);\r\n\r\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n    const req = context.switchToHttp().getRequest();\r\n    const method = req.method;\r\n    const url = req.url;\r\n\r\n    this.logger.log(`Incoming request: ${method} ${url}`);\r\n\r\n    const now = Date.now();\r\n    return next\r\n      .handle()\r\n      .pipe(\r\n        tap(() =>\r\n          this.logger.log(\r\n            `Request to ${method} ${url} took ${Date.now() - now}ms`,\r\n          ),\r\n        ),\r\n      );\r\n  }\r\n}\r\n"],"names":["LoggingInterceptor","intercept","context","next","req","switchToHttp","getRequest","method","url","logger","log","now","Date","handle","pipe","tap","Logger","name"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBALN;2BAEa;;;;;;;AAGb,IAAA,AAAMA,qBAAN,MAAMA;IAGXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,MAAMC,MAAMF,QAAQG,YAAY,GAAGC,UAAU;QAC7C,MAAMC,SAASH,IAAIG,MAAM;QACzB,MAAMC,MAAMJ,IAAII,GAAG;QAEnB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,kBAAkB,EAAEH,OAAO,CAAC,EAAEC,IAAI,CAAC;QAEpD,MAAMG,MAAMC,KAAKD,GAAG;QACpB,OAAOR,KACJU,MAAM,GACNC,IAAI,CACHC,IAAAA,cAAG,EAAC,IACF,IAAI,CAACN,MAAM,CAACC,GAAG,CACb,CAAC,WAAW,EAAEH,OAAO,CAAC,EAAEC,IAAI,MAAM,EAAEI,KAAKD,GAAG,KAAKA,IAAI,EAAE,CAAC;IAIlE;;aAnBiBF,SAAS,IAAIO,cAAM,CAAChB,mBAAmBiB,IAAI;;AAoB9D"}