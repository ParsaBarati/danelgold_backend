{"version":3,"sources":["../../../src/common/utils/swagger.utils.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { config as dotenvConfig } from 'dotenv';\nimport { UnauthorizedException } from '@nestjs/common';\n\ndotenvConfig({ path: '.develop.env' });\n\nexport class SwaggerHelper {\n  private basePath = process.env.SWAGGER_PATH || 'api-docs';\n  private username = process.env.SWAGGER_USERNAME || 'admin';\n  private password = process.env.SWAGGER_PASSWORD || 'admin';\n  private title = process.env.SWAGGER_TITLE || 'API Documentation';\n  private description = process.env.SWAGGER_DESCRIPTION || 'API description';\n\n  setup(app) {\n    if (!this.basePath || !this.username || !this.password) {\n      console.error('Swagger Disabled : configuration missing ...');\n      return;\n    }\n\n    const config = new DocumentBuilder()\n      .setTitle(this.title)\n      .setDescription(this.description)\n      .setVersion('1.0.0')\n      .addBearerAuth()\n      .addGlobalParameters({\n        name: 'Accept-Language',\n        in: 'header',\n        schema: {\n          enum: ['en', 'fa'],\n        },\n      })\n      .build();\n\n    const expressApp = app.getHttpAdapter().getInstance();\n\n    expressApp.use((request, reply, next) =>\n      this.basicAuthInterceptor(request, reply, next),\n    );\n\n    const document = SwaggerModule.createDocument(app, config);\n    SwaggerModule.setup(this.basePath, app, document, {\n      swaggerOptions: {\n        persistAuthorization: true,\n        tagsSorter: 'alpha',\n        operationsSorter: 'alpha',\n      },\n      customJs: '/public/swagger-custom.js',\n    });\n  }\n\n  getBasePath() {\n    return this.basePath.startsWith('/') ? this.basePath : `/${this.basePath}`;\n  }\n\n  setError(reply: any, next: any) {\n    console.log('Authorization Failed. Check username and password.');\n    reply.header('WWW-Authenticate', 'Basic realm=\"Paraf\" charset=\"UTF-8\"');\n    next(new UnauthorizedException());\n  }\n\n  basicAuthInterceptor(request: any, reply: any, next: any) {\n    const url = request.url.split('?').shift().replace(/\\/+$/, '');\n    if (url !== this.getBasePath() && url !== `${this.getBasePath()}-json`) {\n      next();\n      return;\n    }\n    let credentials = request.headers['authorization'];\n    if (typeof credentials !== 'string') {\n      this.setError(reply, next);\n      return;\n    }\n    credentials = credentials.replace('Basic ', '');\n    const credentialsDecoded = Buffer.from(credentials, 'base64').toString(\n      'utf-8',\n    );\n    const userPassRE = /^([^:]*):(.*)$/;\n    const userPass = userPassRE.exec(credentialsDecoded);\n    if (userPass[1] === this.username && userPass[2] === this.password) {\n      console.log('Authorization Successful.');\n      next();\n      return;\n    }\n    this.setError(reply, next);\n  }\n}\n"],"names":["SwaggerHelper","dotenvConfig","path","setup","app","basePath","username","password","console","error","config","DocumentBuilder","setTitle","title","setDescription","description","setVersion","addBearerAuth","addGlobalParameters","name","in","schema","enum","build","expressApp","getHttpAdapter","getInstance","use","request","reply","next","basicAuthInterceptor","document","SwaggerModule","createDocument","swaggerOptions","persistAuthorization","tagsSorter","operationsSorter","customJs","getBasePath","startsWith","setError","log","header","UnauthorizedException","url","split","shift","replace","credentials","headers","credentialsDecoded","Buffer","from","toString","userPassRE","userPass","exec","process","env","SWAGGER_PATH","SWAGGER_USERNAME","SWAGGER_PASSWORD","SWAGGER_TITLE","SWAGGER_DESCRIPTION"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPU;yBACwB;wBACR;wBACD;AAEtCC,IAAAA,cAAY,EAAC;IAAEC,MAAM;AAAe;AAE7B,IAAA,AAAMF,gBAAN,MAAMA;IAOXG,MAAMC,GAAG,EAAE;QACT,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,QAAQ,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;YACtDC,QAAQC,KAAK,CAAC;YACd;QACF;QAEA,MAAMC,SAAS,IAAIC,wBAAe,GAC/BC,QAAQ,CAAC,IAAI,CAACC,KAAK,EACnBC,cAAc,CAAC,IAAI,CAACC,WAAW,EAC/BC,UAAU,CAAC,SACXC,aAAa,GACbC,mBAAmB,CAAC;YACnBC,MAAM;YACNC,IAAI;YACJC,QAAQ;gBACNC,MAAM;oBAAC;oBAAM;iBAAK;YACpB;QACF,GACCC,KAAK;QAER,MAAMC,aAAapB,IAAIqB,cAAc,GAAGC,WAAW;QAEnDF,WAAWG,GAAG,CAAC,CAACC,SAASC,OAAOC,OAC9B,IAAI,CAACC,oBAAoB,CAACH,SAASC,OAAOC;QAG5C,MAAME,WAAWC,sBAAa,CAACC,cAAc,CAAC9B,KAAKM;QACnDuB,sBAAa,CAAC9B,KAAK,CAAC,IAAI,CAACE,QAAQ,EAAED,KAAK4B,UAAU;YAChDG,gBAAgB;gBACdC,sBAAsB;gBACtBC,YAAY;gBACZC,kBAAkB;YACpB;YACAC,UAAU;QACZ;IACF;IAEAC,cAAc;QACZ,OAAO,IAAI,CAACnC,QAAQ,CAACoC,UAAU,CAAC,OAAO,IAAI,CAACpC,QAAQ,GAAG,CAAC,CAAC,EAAE,IAAI,CAACA,QAAQ,CAAC,CAAC;IAC5E;IAEAqC,SAASb,KAAU,EAAEC,IAAS,EAAE;QAC9BtB,QAAQmC,GAAG,CAAC;QACZd,MAAMe,MAAM,CAAC,oBAAoB;QACjCd,KAAK,IAAIe,6BAAqB;IAChC;IAEAd,qBAAqBH,OAAY,EAAEC,KAAU,EAAEC,IAAS,EAAE;QACxD,MAAMgB,MAAMlB,QAAQkB,GAAG,CAACC,KAAK,CAAC,KAAKC,KAAK,GAAGC,OAAO,CAAC,QAAQ;QAC3D,IAAIH,QAAQ,IAAI,CAACN,WAAW,MAAMM,QAAQ,CAAC,EAAE,IAAI,CAACN,WAAW,GAAG,KAAK,CAAC,EAAE;YACtEV;YACA;QACF;QACA,IAAIoB,cAActB,QAAQuB,OAAO,CAAC,gBAAgB;QAClD,IAAI,OAAOD,gBAAgB,UAAU;YACnC,IAAI,CAACR,QAAQ,CAACb,OAAOC;YACrB;QACF;QACAoB,cAAcA,YAAYD,OAAO,CAAC,UAAU;QAC5C,MAAMG,qBAAqBC,cAAM,CAACC,IAAI,CAACJ,aAAa,UAAUK,QAAQ,CACpE;QAEF,MAAMC,aAAa;QACnB,MAAMC,WAAWD,WAAWE,IAAI,CAACN;QACjC,IAAIK,QAAQ,CAAC,EAAE,KAAK,IAAI,CAACnD,QAAQ,IAAImD,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAClD,QAAQ,EAAE;YAClEC,QAAQmC,GAAG,CAAC;YACZb;YACA;QACF;QACA,IAAI,CAACY,QAAQ,CAACb,OAAOC;IACvB;;aA5EQzB,WAAWsD,QAAQC,GAAG,CAACC,YAAY,IAAI;aACvCvD,WAAWqD,QAAQC,GAAG,CAACE,gBAAgB,IAAI;aAC3CvD,WAAWoD,QAAQC,GAAG,CAACG,gBAAgB,IAAI;aAC3ClD,QAAQ8C,QAAQC,GAAG,CAACI,aAAa,IAAI;aACrCjD,cAAc4C,QAAQC,GAAG,CAACK,mBAAmB,IAAI;;AAyE3D"}