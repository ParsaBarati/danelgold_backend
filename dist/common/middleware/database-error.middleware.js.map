{"version":3,"sources":["../../../src/common/middleware/database-error.middleware.ts"],"sourcesContent":["import { Injectable, NestMiddleware, Logger } from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport { Connection } from 'typeorm';\r\n\r\n@Injectable()\r\nexport class DatabaseErrorMiddleware implements NestMiddleware {\r\n  private logger = new Logger('DatabaseErrorMiddleware');\r\n\r\n  constructor(private readonly connection: Connection) {}\r\n\r\n  async use(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      await this.checkDatabaseConnection();\r\n      await this.checkEntities();\r\n      next();\r\n    } catch (error) {\r\n      this.logger.error(`Database connection or entity error: ${error}`);\r\n      res.status(500).json({ message: 'Internal server error' });\r\n    }\r\n  }\r\n\r\n  private async checkDatabaseConnection() {\r\n    const isConnected = this.connection.isConnected;\r\n    if (!isConnected) {\r\n      await this.connection.connect();\r\n    }\r\n  }\r\n\r\n  private async checkEntities() {\r\n    const entityMetadatas = this.connection.entityMetadatas;\r\n    if (entityMetadatas.length === 0) {\r\n      throw new Error('No entities found in the database connection');\r\n    }\r\n    // Optional: Log entity names\r\n    entityMetadatas.forEach((metadata) => {\r\n      this.logger.log(`Found entity: ${metadata.name}`);\r\n    });\r\n  }\r\n}\r\n"],"names":["DatabaseErrorMiddleware","use","req","res","next","checkDatabaseConnection","checkEntities","error","logger","status","json","message","isConnected","connection","connect","entityMetadatas","length","Error","forEach","metadata","log","name","constructor","Logger"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALsC;yBAExB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGpB,IAAA,AAAMA,0BAAN,MAAMA;IAKLC,IAAIC,GAAY,EAAEC,GAAa,EAAEC,IAAkB;;eAAzD,oBAAA;YACE,IAAI;gBACF,MAAM,MAAKC,uBAAuB;gBAClC,MAAM,MAAKC,aAAa;gBACxBF;YACF,EAAE,OAAOG,OAAO;gBACd,MAAKC,MAAM,CAACD,KAAK,CAAC,CAAC,qCAAqC,EAAEA,MAAM,CAAC;gBACjEJ,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,SAAS;gBAAwB;YAC1D;QACF;;IAEcN;;eAAd,oBAAA;YACE,MAAMO,cAAc,MAAKC,UAAU,CAACD,WAAW;YAC/C,IAAI,CAACA,aAAa;gBAChB,MAAM,MAAKC,UAAU,CAACC,OAAO;YAC/B;QACF;;IAEcR;;eAAd,oBAAA;YACE,MAAMS,kBAAkB,MAAKF,UAAU,CAACE,eAAe;YACvD,IAAIA,gBAAgBC,MAAM,KAAK,GAAG;gBAChC,MAAM,IAAIC,MAAM;YAClB;YACA,6BAA6B;YAC7BF,gBAAgBG,OAAO,CAAC,CAACC;gBACvB,MAAKX,MAAM,CAACY,GAAG,CAAC,CAAC,cAAc,EAAED,SAASE,IAAI,CAAC,CAAC;YAClD;QACF;;IA7BAC,YAAY,AAAiBT,UAAsB,CAAE;aAAxBA,aAAAA;aAFrBL,SAAS,IAAIe,cAAM,CAAC;IAE0B;AA8BxD"}