{"version":3,"sources":["../../../src/common/utils/logger.interseptor.ts"],"sourcesContent":["import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(LoggingInterceptor.name);\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const req = context.switchToHttp().getRequest();\n    const method = req.method;\n    const url = req.url;\n\n    this.logger.log(`Incoming request: ${method} ${url}`);\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          this.logger.log(\n            `Request to ${method} ${url} took ${Date.now() - now}ms`,\n          ),\n        ),\n      );\n  }\n}\n"],"names":["LoggingInterceptor","intercept","context","next","req","switchToHttp","getRequest","method","url","logger","log","now","Date","handle","pipe","tap","Logger","name"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBALN;2BAEa;;;;;;;AAGb,IAAA,AAAMA,qBAAN,MAAMA;IAGXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,MAAMC,MAAMF,QAAQG,YAAY,GAAGC,UAAU;QAC7C,MAAMC,SAASH,IAAIG,MAAM;QACzB,MAAMC,MAAMJ,IAAII,GAAG;QAEnB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,kBAAkB,EAAEH,OAAO,CAAC,EAAEC,IAAI,CAAC;QAEpD,MAAMG,MAAMC,KAAKD,GAAG;QACpB,OAAOR,KACJU,MAAM,GACNC,IAAI,CACHC,IAAAA,cAAG,EAAC,IACF,IAAI,CAACN,MAAM,CAACC,GAAG,CACb,CAAC,WAAW,EAAEH,OAAO,CAAC,EAAEC,IAAI,MAAM,EAAEI,KAAKD,GAAG,KAAKA,IAAI,EAAE,CAAC;IAIlE;;aAnBiBF,SAAS,IAAIO,cAAM,CAAChB,mBAAmBiB,IAAI;;AAoB9D"}