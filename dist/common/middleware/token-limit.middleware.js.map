{"version":3,"sources":["../../../src/common/middleware/token-limit.middleware.ts"],"sourcesContent":["import {\r\n  Injectable,\r\n  NestMiddleware,\r\n  NotAcceptableException,\r\n} from '@nestjs/common';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport { TokenService } from '@/User/auth/token/token.service';\r\nimport { User } from '@/User/user/entity/user.entity';\r\n\r\n@Injectable()\r\nexport class AuthMiddleware implements NestMiddleware {\r\n  constructor(private readonly tokenService: TokenService) {}\r\n\r\n  async use(req: Request, res: Response, next: NextFunction) {\r\n    const token = req.headers.authorization?.split('Bearer ')[1];\r\n\r\n    if (!token) {\r\n      throw new NotAcceptableException('Token is required');\r\n    }\r\n\r\n    const isValid = await this.tokenService.validateToken(token);\r\n\r\n    if (!isValid) {\r\n      throw new NotAcceptableException('Invalid or expired token');\r\n    }\r\n\r\n    await this.tokenService.createToken(req.user as User);\r\n\r\n    next();\r\n  }\r\n}\r\n"],"names":["AuthMiddleware","use","req","res","next","token","headers","authorization","split","NotAcceptableException","isValid","tokenService","validateToken","createToken","user","constructor"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBANN;8BAEsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAItB,IAAA,AAAMA,iBAAN,MAAMA;IAGLC,IAAIC,GAAY,EAAEC,GAAa,EAAEC,IAAkB;;eAAzD,oBAAA;gBACgBF;YAAd,MAAMG,SAAQH,6BAAAA,IAAII,OAAO,CAACC,aAAa,cAAzBL,iDAAAA,2BAA2BM,KAAK,CAAC,UAAU,CAAC,EAAE;YAE5D,IAAI,CAACH,OAAO;gBACV,MAAM,IAAII,8BAAsB,CAAC;YACnC;YAEA,MAAMC,UAAU,MAAM,MAAKC,YAAY,CAACC,aAAa,CAACP;YAEtD,IAAI,CAACK,SAAS;gBACZ,MAAM,IAAID,8BAAsB,CAAC;YACnC;YAEA,MAAM,MAAKE,YAAY,CAACE,WAAW,CAACX,IAAIY,IAAI;YAE5CV;QACF;;IAlBAW,YAAY,AAAiBJ,YAA0B,CAAE;aAA5BA,eAAAA;IAA6B;AAmB5D"}