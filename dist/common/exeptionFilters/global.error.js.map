{"version":3,"sources":["../../../src/common/exeptionFilters/global.error.ts"],"sourcesContent":["import {\r\n  ExceptionFilter,\r\n  Catch,\r\n  ArgumentsHost,\r\n  HttpException,\r\n  HttpStatus,\r\n} from '@nestjs/common';\r\n\r\n@Catch()\r\nexport class AllExceptionsFilter implements ExceptionFilter {\r\n  catch(exception: unknown, host: ArgumentsHost) {\r\n    const ctx = host.switchToHttp();\r\n    const response = ctx.getResponse();\r\n    const request = ctx.getRequest();\r\n    const status =\r\n      exception instanceof HttpException\r\n        ? exception.getStatus()\r\n        : HttpStatus.INTERNAL_SERVER_ERROR;\r\n\r\n    const message =\r\n      exception instanceof HttpException\r\n        ? exception.getResponse()\r\n        : 'Internal server error  ';\r\n\r\n    console.error(`[${new Date().toISOString()}] ${status} - ${message}`);\r\n    console.error(exception);\r\n\r\n    response.status(status).json({\r\n      statusCode: status,\r\n      message: message,\r\n      timestamp: new Date().toISOString(),\r\n      path: request.url,\r\n    });\r\n  }\r\n}\r\n"],"names":["AllExceptionsFilter","catch","exception","host","ctx","switchToHttp","response","getResponse","request","getRequest","status","HttpException","getStatus","HttpStatus","INTERNAL_SERVER_ERROR","message","console","error","Date","toISOString","json","statusCode","timestamp","path","url"],"mappings":";;;;+BASaA;;;eAAAA;;;wBAHN;;;;;;;AAGA,IAAA,AAAMA,sBAAN,MAAMA;IACXC,MAAMC,SAAkB,EAAEC,IAAmB,EAAE;QAC7C,MAAMC,MAAMD,KAAKE,YAAY;QAC7B,MAAMC,WAAWF,IAAIG,WAAW;QAChC,MAAMC,UAAUJ,IAAIK,UAAU;QAC9B,MAAMC,SACJR,qBAAqBS,qBAAa,GAC9BT,UAAUU,SAAS,KACnBC,kBAAU,CAACC,qBAAqB;QAEtC,MAAMC,UACJb,qBAAqBS,qBAAa,GAC9BT,UAAUK,WAAW,KACrB;QAENS,QAAQC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAIC,OAAOC,WAAW,GAAG,EAAE,EAAET,OAAO,GAAG,EAAEK,QAAQ,CAAC;QACpEC,QAAQC,KAAK,CAACf;QAEdI,SAASI,MAAM,CAACA,QAAQU,IAAI,CAAC;YAC3BC,YAAYX;YACZK,SAASA;YACTO,WAAW,IAAIJ,OAAOC,WAAW;YACjCI,MAAMf,QAAQgB,GAAG;QACnB;IACF;AACF"}