{"version":3,"sources":["../../src/upload/upload.service.ts"],"sourcesContent":["import { PaginationResult } from '@/common/paginate/pagitnate.service';\r\nimport { Injectable, NotFoundException } from '@nestjs/common';\r\nimport { InjectRepository } from '@nestjs/typeorm';\r\nimport { Upload } from './entity/uplaod.entity';\r\nimport { Repository } from 'typeorm';\r\nimport { join } from 'path';\r\n\r\nimport fs from 'fs-extra';\r\nimport { ApiResponses, createResponse } from '@/utils/response.util';\r\nimport { PaginationService } from '@/common/paginate/pagitnate.service';\r\n\r\nimport { User } from '@/User/user/entity/user.entity';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n  constructor(\r\n    @InjectRepository(Upload)\r\n    private readonly uploadRepository: Repository<Upload>,\r\n    @InjectRepository(User)\r\n    private readonly userRepository: Repository<User>,\r\n    private readonly paginationService: PaginationService,\r\n  ) {}\r\n\r\n  async createUpload(file: any): Promise<{ upload: Upload; link: string }> {\r\n    if (!file) {\r\n      throw new NotFoundException('فایلی برای آپلود یافت نشد');\r\n    }\r\n\r\n    const sizeFile = file.size;\r\n    const uploadFileName = file.filename;\r\n    const uploadDestination = file.destination;\r\n    const uploadMemType = file.mimetype;\r\n\r\n    const newUpload = this.uploadRepository.create({\r\n      name: uploadFileName,\r\n      size: sizeFile,\r\n      memType: uploadMemType,\r\n      destination: uploadDestination,\r\n    });\r\n\r\n    const savedUpload = await this.uploadRepository.save(newUpload);\r\n\r\n    // Generate the file link\r\n    const baseUrl = process.env.BASE_URL_UPLOAD;\r\n    const encodedFileName = `${savedUpload.destination.replace(/\\\\/g, '/')}/${encodeURIComponent(savedUpload.name)}`;\r\n    const link = baseUrl + encodedFileName;\r\n\r\n    // Return an object with the Upload entity and the generated link\r\n    return { upload: savedUpload, link };\r\n  }\r\n\r\n  async getAllUploads(\r\n    query: any,\r\n  ): Promise<ApiResponses<PaginationResult<Upload>>> {\r\n    const { page, limit, search, sort, sortOrder } = query;\r\n\r\n    const queryBuilder = this.uploadRepository.createQueryBuilder('upload');\r\n\r\n    if (search) {\r\n      queryBuilder.andWhere('upload.name ILIKE :search', {\r\n        search: `%${search}%`,\r\n      });\r\n    }\r\n\r\n    if (sort) {\r\n      queryBuilder.orderBy(`upload.${sort}`, sortOrder as 'ASC' | 'DESC');\r\n    } else {\r\n      queryBuilder.orderBy('upload.id', 'DESC');\r\n    }\r\n\r\n    const paginationResult = await this.paginationService.paginate<Upload>(\r\n      queryBuilder,\r\n      page,\r\n      limit,\r\n    );\r\n\r\n    const baseUrl = process.env.BASE_URL_UPLOAD;\r\n\r\n    const uploadsWithLinks = paginationResult.data.map((upload) => ({\r\n      ...upload,\r\n      link:\r\n        baseUrl +\r\n        `${upload.destination.replace(/\\\\/g, '/')}` +\r\n        `/${encodeURIComponent(upload.name).replace(/%5C/g, '/')}`,\r\n    }));\r\n\r\n    const resultWithLinks = {\r\n      ...paginationResult,\r\n      data: uploadsWithLinks,\r\n    };\r\n\r\n    return createResponse(200, resultWithLinks);\r\n  }\r\n\r\n  async deleteUpload(id: number): Promise<ApiResponses<{ message: string }>> {\r\n    const upload = await this.uploadRepository.findOne({ where: { id } });\r\n\r\n    if (!upload) {\r\n      throw new NotFoundException('فایل یافت نشد');\r\n    }\r\n\r\n    const filePath = join(upload.destination, upload.name);\r\n\r\n    await this.uploadRepository.remove(upload);\r\n\r\n    fs.unlink(filePath, (err) => {\r\n      if (err) {\r\n        console.error('Error deleting file:', err);\r\n      } else {\r\n        console.log('File deleted successfully:', filePath);\r\n      }\r\n    });\r\n\r\n    return createResponse(200, { message: 'فایل با موفقیت حذف شد' });\r\n  }\r\n\r\n  async deleteMultipleUploads(\r\n    ids: number[],\r\n  ): Promise<ApiResponses<{ message: string }>> {\r\n    const uploads = await this.uploadRepository.findByIds(ids);\r\n\r\n    if (uploads.length === 0) {\r\n      throw new NotFoundException('هیچ فایلی یافت نشد');\r\n    }\r\n\r\n    for (const upload of uploads) {\r\n      const filePath = join(upload.destination, upload.name);\r\n\r\n      await this.uploadRepository.remove(upload);\r\n\r\n      fs.unlink(filePath, (err) => {\r\n        if (err) {\r\n          console.error('Error deleting file:', err);\r\n        } else {\r\n          console.log('File deleted successfully:', filePath);\r\n        }\r\n      });\r\n    }\r\n\r\n    return createResponse(200, { message: 'فایل‌ها با موفقیت حذف شدند' });\r\n  }\r\n\r\n  async getUploadById(id: number): Promise<any> {\r\n    const upload = await this.uploadRepository.findOne({\r\n      where: { id },\r\n    });\r\n\r\n    if (!upload) {\r\n      throw new NotFoundException('فایلی پیدا نشد');\r\n    }\r\n\r\n    const name = upload.name;\r\n    const destination = upload.destination;\r\n    console.log(`destination ${destination}`);\r\n    const filePath = join(destination, name).replace(/\\\\/g, '/');\r\n\r\n    console.log(`filePath ${filePath}`);\r\n\r\n    const baseUrl = process.env.BASE_URL_UPLOAD;\r\n    const encodedFileName =\r\n      `${destination.replace(/\\\\/g, '/')}` + `/${encodeURIComponent(name)}`;\r\n    const uploadWithLink = {\r\n      ...upload,\r\n      link: `${baseUrl}${encodedFileName}`,\r\n    };\r\n\r\n    return createResponse(200, uploadWithLink);\r\n  }\r\n\r\n  async getUploadByPath(name: string): Promise<any> {\r\n    const upload = await this.uploadRepository.findOne({\r\n      where: { name },\r\n    });\r\n\r\n    if (!upload) {\r\n      throw new NotFoundException('فایلی پیدا نشد');\r\n    }\r\n\r\n    const uploadName = upload.name;\r\n    const destination = upload.destination;\r\n    console.log(`destination ${destination}`);\r\n    const filePath = join(destination, uploadName).replace(/\\\\/g, '/');\r\n\r\n    console.log(`filePath ${filePath}`);\r\n\r\n    return createResponse(200, filePath);\r\n  }\r\n\r\n  async createProfilePictureUpload(\r\n    file: any,\r\n    user: User,\r\n  ): Promise<ApiResponses<any>> {\r\n    if (!file) {\r\n      throw new NotFoundException('File not found');\r\n    }\r\n\r\n\r\n    if (!user) {\r\n      throw new NotFoundException('User not found');\r\n    }\r\n\r\n    const newUpload = this.uploadRepository.create({\r\n      name: file.filename,\r\n      size: file.size,\r\n      memType: file.mimetype,\r\n      destination: file.destination,\r\n    });\r\n\r\n    const savedUpload = await this.uploadRepository.save(newUpload);\r\n\r\n    user.profilePic =\r\n      `${process.env.BASE_URL_UPLOAD}` +\r\n      `${savedUpload.destination.replace(/\\\\/g, '/')}` +\r\n      `/${encodeURIComponent(savedUpload.name)}`;\r\n    await this.userRepository.save(user);\r\n\r\n    const uploadWithLink = {\r\n      ...savedUpload,\r\n      link: user.profilePic,\r\n      profilePic: user.profilePic,\r\n    };\r\n\r\n    return createResponse(\r\n      200,\r\n      uploadWithLink,\r\n      'Profile picture uploaded successfully!',\r\n    );\r\n  }\r\n}\r\n"],"names":["UploadService","createUpload","file","NotFoundException","sizeFile","size","uploadFileName","filename","uploadDestination","destination","uploadMemType","mimetype","newUpload","uploadRepository","create","name","memType","savedUpload","save","baseUrl","process","env","BASE_URL_UPLOAD","encodedFileName","replace","encodeURIComponent","link","upload","getAllUploads","query","page","limit","search","sort","sortOrder","queryBuilder","createQueryBuilder","andWhere","orderBy","paginationResult","paginationService","paginate","uploadsWithLinks","data","map","resultWithLinks","createResponse","deleteUpload","id","findOne","where","filePath","join","remove","fs","unlink","err","console","error","log","message","deleteMultipleUploads","ids","uploads","findByIds","length","getUploadById","uploadWithLink","getUploadByPath","uploadName","createProfilePictureUpload","user","profilePic","userRepository","constructor"],"mappings":"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"}