{"version":3,"sources":["../../../src/common/middleware/token-limit.middleware.ts"],"sourcesContent":["import {\n  Injectable,\n  NestMiddleware,\n  NotAcceptableException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { TokenService } from '@/user/auth/token/token.service';\nimport { User } from '@/user/user/entity/user.entity';\n\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n  constructor(private readonly tokenService: TokenService) {}\n\n  async use(req: Request, res: Response, next: NextFunction) {\n    const token = req.headers.authorization?.split('Bearer ')[1];\n\n    if (!token) {\n      throw new NotAcceptableException('Token is required');\n    }\n\n    const isValid = await this.tokenService.validateToken(token);\n\n    if (!isValid) {\n      throw new NotAcceptableException('Invalid or expired token');\n    }\n\n    await this.tokenService.createToken(req.user as User);\n\n    next();\n  }\n}\n"],"names":["AuthMiddleware","use","req","res","next","token","headers","authorization","split","NotAcceptableException","isValid","tokenService","validateToken","createToken","user","constructor"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBANN;8BAEsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAItB,IAAA,AAAMA,iBAAN,MAAMA;IAGLC,IAAIC,GAAY,EAAEC,GAAa,EAAEC,IAAkB;;eAAzD,oBAAA;gBACgBF;YAAd,MAAMG,SAAQH,6BAAAA,IAAII,OAAO,CAACC,aAAa,cAAzBL,iDAAAA,2BAA2BM,KAAK,CAAC,UAAU,CAAC,EAAE;YAE5D,IAAI,CAACH,OAAO;gBACV,MAAM,IAAII,8BAAsB,CAAC;YACnC;YAEA,MAAMC,UAAU,MAAM,MAAKC,YAAY,CAACC,aAAa,CAACP;YAEtD,IAAI,CAACK,SAAS;gBACZ,MAAM,IAAID,8BAAsB,CAAC;YACnC;YAEA,MAAM,MAAKE,YAAY,CAACE,WAAW,CAACX,IAAIY,IAAI;YAE5CV;QACF;;IAlBAW,YAAY,AAAiBJ,YAA0B,CAAE;aAA5BA,eAAAA;IAA6B;AAmB5D"}