{"version":3,"sources":["../../src/upload/upload.controller.ts"],"sourcesContent":["import { ApiResponses } from '@/utils/response.util';\r\nimport { UploadService } from './upload.service';\r\nimport {\r\n  Controller,\r\n  DefaultValuePipe,\r\n  Delete,\r\n  Get,\r\n  HttpStatus,\r\n  NotFoundException,\r\n  Param,\r\n  ParseFilePipeBuilder,\r\n  ParseIntPipe,\r\n  Post,\r\n  Query,\r\n  Req,\r\n  Res,\r\n  UploadedFile,\r\n  UseInterceptors,\r\n} from '@nestjs/common';\r\nimport { FileInterceptor } from '@nestjs/platform-express';\r\nimport path from 'path';\r\nimport { Request, Response } from 'express';\r\nimport { Public } from '@/common/decorators/public.decorator';\r\nimport { PaginationResult } from '@/common/paginate/pagitnate.service';\r\nimport { Upload } from './entity/uplaod.entity';\r\nimport { ApiBearerAuth, ApiExcludeController, ApiQuery, ApiTags } from '@nestjs/swagger';\r\n\r\n@ApiExcludeController()\r\n@Controller('upload')\r\nexport class UploadController {\r\n  constructor(private readonly uploadService: UploadService) {}\r\n\r\n  @Post()\r\n  @UseInterceptors(FileInterceptor('file'))\r\n  async createUpload(\r\n    @UploadedFile(\r\n      new ParseFilePipeBuilder()\r\n        .addMaxSizeValidator({\r\n          maxSize: 5 * 1024 * 1024, //b/kb/mb\r\n        })\r\n        .build({\r\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\r\n        }),\r\n    )\r\n    file: Express.Multer.File,\r\n  ){\r\n    return await this.uploadService.createUpload(file);\r\n  }\r\n\r\n  @Post('picture')\r\n  @UseInterceptors(FileInterceptor('file'))\r\n  async createProfilePictureUpload(\r\n    @UploadedFile(\r\n      new ParseFilePipeBuilder()\r\n        .addMaxSizeValidator({\r\n          maxSize: 5 * 1024 * 1024, //b/kb/mb\r\n        })\r\n        .build({\r\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\r\n        }),\r\n    )\r\n    file: Express.Multer.File,\r\n    @Req() req: Request,\r\n  ){\r\n    const userIdentifier = (req.user as any).result.phone || (req.user as any).result.email;\r\n    return await this.uploadService.createProfilePictureUpload(file, userIdentifier);\r\n  }\r\n\r\n  @ApiQuery({ name: 'page', required: false })\r\n  @ApiQuery({ name: 'limit', required: false })\r\n  @ApiQuery({ name: 'search', required: false })\r\n  @ApiQuery({ name: 'sort', required: false })\r\n  @ApiQuery({ name: 'sortOrder', required: false })\r\n  @Get('all')\r\n  async getAllUploads(\r\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\r\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\r\n    @Query('search') search?: string,\r\n    @Query('sort', new DefaultValuePipe('id')) sort?: string,\r\n    @Query('sortOrder', new DefaultValuePipe('DESC')) sortOrder?: string,\r\n  ){\r\n    const query = { page, limit, search, sort, sortOrder };\r\n    return this.uploadService.getAllUploads(query);\r\n  }\r\n\r\n  @Delete(':id')\r\n  async deleteUpload(\r\n    @Param('id') id: number\r\n  ){\r\n    return this.uploadService.deleteUpload(id);\r\n  }\r\n\r\n  @Delete('')\r\n  async deleteMultipleUploads(\r\n    @Query('delete') ids: string,\r\n  ){\r\n    const idArray = ids.split(',').map((id) => parseInt(id, 10));\r\n    return this.uploadService.deleteMultipleUploads(idArray);\r\n  }\r\n\r\n  @Public()\r\n  @Get('/path/:filePath')\r\n  async getByPath(\r\n    @Param('filePath') filePath: string, \r\n    @Res() res: Response\r\n  ){\r\n    const filePathClean = filePath.replace(/\\\\/g, '/');\r\n    const file = await this.uploadService.getUploadByPath(filePathClean);\r\n    if (!file) {\r\n      throw new NotFoundException('فایلی پیدا نشد');\r\n    }\r\n    const absolutePath = path.resolve(__dirname, '..', '..', file.result);\r\n    // ارسال فایل\r\n    res.sendFile(absolutePath);\r\n  }\r\n\r\n  @Get(':id')\r\n  async getUploadById(\r\n    @Param(\r\n      'id',\r\n      new ParseIntPipe({\r\n        errorHttpStatusCode: HttpStatus.BAD_REQUEST,\r\n      }),\r\n    )\r\n    uploadId: number,\r\n  ){\r\n    return await this.uploadService.getUploadById(uploadId);\r\n  }\r\n}\r\n"],"names":["UploadController","createUpload","file","uploadService","createProfilePictureUpload","req","userIdentifier","user","result","phone","email","getAllUploads","page","limit","search","sort","sortOrder","query","deleteUpload","id","deleteMultipleUploads","ids","idArray","split","map","parseInt","getByPath","filePath","res","filePathClean","replace","getUploadByPath","NotFoundException","absolutePath","path","resolve","__dirname","sendFile","getUploadById","uploadId","constructor","ParseFilePipeBuilder","addMaxSizeValidator","maxSize","build","errorHttpStatusCode","HttpStatus","UNPROCESSABLE_ENTITY","name","required","DefaultValuePipe","ParseIntPipe","BAD_REQUEST"],"mappings":";;;;+BA6BaA;;;eAAAA;;;+BA5BiB;wBAiBvB;iCACyB;6DACf;yBACiB;iCACX;yBAGgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIhE,IAAA,AAAMA,mBAAN,MAAMA;IAKLC,aACJ,AASAC,IAAyB;;eAZ3B,oBAAA;YAcE,OAAO,MAAM,MAAKC,aAAa,CAACF,YAAY,CAACC;QAC/C;;IAIME,2BACJ,AASAF,IAAyB,EACzB,AAAOG,GAAY;;eAbrB,oBAAA;YAeE,MAAMC,iBAAiB,AAACD,IAAIE,IAAI,CAASC,MAAM,CAACC,KAAK,IAAI,AAACJ,IAAIE,IAAI,CAASC,MAAM,CAACE,KAAK;YACvF,OAAO,MAAM,MAAKP,aAAa,CAACC,0BAA0B,CAACF,MAAMI;QACnE;;IAQMK,cACJ,AAAsDC,IAAY,EAClE,AAAwDC,KAAa,EACrE,AAAiBC,MAAe,EAChC,AAA2CC,IAAa,EACxD,AAAkDC,SAAkB;;eAXtE,oBAAA;YAaE,MAAMC,QAAQ;gBAAEL;gBAAMC;gBAAOC;gBAAQC;gBAAMC;YAAU;YACrD,OAAO,MAAKb,aAAa,CAACQ,aAAa,CAACM;QAC1C;;IAGMC,aACJ,AAAaC,EAAU;;eAFzB,oBAAA;YAIE,OAAO,MAAKhB,aAAa,CAACe,YAAY,CAACC;QACzC;;IAGMC,sBACJ,AAAiBC,GAAW;;eAF9B,oBAAA;YAIE,MAAMC,UAAUD,IAAIE,KAAK,CAAC,KAAKC,GAAG,CAAC,CAACL,KAAOM,SAASN,IAAI;YACxD,OAAO,MAAKhB,aAAa,CAACiB,qBAAqB,CAACE;QAClD;;IAIMI,UACJ,AAAmBC,QAAgB,EACnC,AAAOC,GAAa;;eAJtB,oBAAA;YAME,MAAMC,gBAAgBF,SAASG,OAAO,CAAC,OAAO;YAC9C,MAAM5B,OAAO,MAAM,MAAKC,aAAa,CAAC4B,eAAe,CAACF;YACtD,IAAI,CAAC3B,MAAM;gBACT,MAAM,IAAI8B,yBAAiB,CAAC;YAC9B;YACA,MAAMC,eAAeC,aAAI,CAACC,OAAO,CAACC,WAAW,MAAM,MAAMlC,KAAKM,MAAM;YACpE,aAAa;YACboB,IAAIS,QAAQ,CAACJ;QACf;;IAGMK,cACJ,AAMAC,QAAgB;;eARlB,oBAAA;YAUE,OAAO,MAAM,MAAKpC,aAAa,CAACmC,aAAa,CAACC;QAChD;;IAjGAC,YAAY,AAAiBrC,aAA4B,CAAE;aAA9BA,gBAAAA;IAA+B;AAkG9D;;;;+CA5FUsC,4BAAoB,GACrBC;QACCC,SAAS,IAAI,OAAO;OAErBC;QACCC,qBAAqBC,kBAAU,CAACC,oBAAoB;;;;yDAG5C,yCAAA,OAAO,wCAAP,OAAO;;;;;;;+CASfN,4BAAoB,GACrBC;QACCC,SAAS,IAAI,OAAO;OAErBC;QACCC,qBAAqBC,kBAAU,CAACC,oBAAoB;;;;;yDAG5C,yCAAA,OAAO,wCAAP,OAAO;;;;;;;QAOXC,MAAM;QAAQC,UAAU;;;QACxBD,MAAM;QAASC,UAAU;;;QACzBD,MAAM;QAAUC,UAAU;;;QAC1BD,MAAM;QAAQC,UAAU;;;QACxBD,MAAM;QAAaC,UAAU;;;gDAGpBC,wBAAgB,CAAC;iDAChBA,wBAAgB,CAAC;;gDAElBA,wBAAgB,CAAC;qDACZA,wBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAyCnCC,oBAAY,CAAC;QACfN,qBAAqBC,kBAAU,CAACM,WAAW;IAC7C"}